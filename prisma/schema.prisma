// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String @unique
  password        String
  role            Roles             @default(admin)
  contactNo       String
  address         String
  profileImg      String
  books           Book[]
  ReviewAndRating ReviewAndRating[]
  Order           Order[]
}

enum Roles {
  admin
  customer
}

model Category {
  id    String @id @default(uuid())
  title String
  books Book[]
}

model Book {
  id              String            @id @default(uuid())
  title           String
  authorId        String
  author          User              @relation(fields: [authorId], references: [id])
  price           Int
  genre           String
  publicationDate DateTime
  categoryId      String
  category        Category          @relation(fields: [categoryId], references: [id])
  reviewAndRatings ReviewAndRating[]
  orderedBooks     OrderedBook[]
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int    @default(0)
  userId String
  user   User   @relation(fields: [userId], references: [id])
  bookId String
  book   Book   @relation(fields: [bookId], references: [id])
}

model Order {
  id          String        @id @default(uuid())
  userId      String
  user        User          @relation(fields: [userId], references: [id])
  status      OrderStatus   @default(pending)
  createdAt   DateTime      @default(now())
  orderedBooks OrderedBook[]
}

enum OrderStatus {
  pending
  shipped
  delivered
}

model OrderedBook {
  id      String @id @default(uuid())
  orderId String
  order   Order  @relation(fields: [orderId], references: [id])
  bookId  String
  book    Book   @relation(fields: [bookId], references: [id])
}
